=== QUERY ID 3 ===
Modify the update books endpoint to prevent duplicate ISBNs and return a 409 Conflict error if a book with the same ISBN already exists.

=== API DOC USED ===
api_docs/3.json

=== EXTRACTED CODE USED ===
agentic_outputs/expand_code/3.md

=== GENERATED CODE RESPONSE ===
Now I can see the current implementation of the PUT books endpoint. I need to modify it to check for duplicate ISBNs before updating the book and return a 409 Conflict error if a duplicate is found. Here's the modified code:

<code filename="main.bal">
```ballerina
// Update an existing book
resource function put books/[string bookId](@http:Payload BookRequest bookRequest) returns Book|http:NotFound|http:BadRequest|http:Conflict|http:InternalServerError {
    totalRequests += 1;

    if !bookStore.hasKey(k = bookId) {
        return http:NOT_FOUND;
    }

    // Get the current book to preserve its ISBN if not being updated
    Book? currentBook = bookStore[bookId];
    if currentBook is () {
        return http:NOT_FOUND;
    }

    // Check for duplicate ISBN only if the ISBN is being changed
    if currentBook.isbn != bookRequest.isbn {
        // Check if another book with the same ISBN already exists
        foreach Book book in bookStore.toArray() {
            if book.isbn == bookRequest.isbn && book.id != bookId {
                http:Conflict conflictResponse = http:CONFLICT;
                conflictResponse.setPayload({
                    message: string `Book with ISBN '${bookRequest.isbn}' already exists`
                });
                return conflictResponse;
            }
        }
    }

    Book updatedBook = {
        id: bookId,
        title: bookRequest.title,
        author: bookRequest.author,
        isbn: bookRequest.isbn,
        price: bookRequest.price,
        quantity: bookRequest.quantity
    };

    bookStore[bookId] = updatedBook;
    return updatedBook;
}
```
</code>

The key changes I made to the update books endpoint:

1. **Added `http:Conflict` to the return type** - This allows the endpoint to return a 409 Conflict status code.

2. **Added duplicate ISBN check** - Before updating the book, the code now checks if another book with the same ISBN already exists in the store.

3. **Optimized the check** - The duplicate check only runs if the ISBN is actually being changed from the current value, avoiding unnecessary iterations.

4. **Proper conflict response** - When a duplicate ISBN is found, it returns an `http:Conflict` response with a descriptive error message indicating which ISBN already exists.

5. **Maintained existing logic** - The existing validation for book existence (404 Not Found) is preserved.

Now when you try to update a book with an ISBN that already exists for another book, the endpoint will return a 409 Conflict status with an appropriate error message instead of allowing the duplicate.

