=== QUERY ID 3 ===
Modify the update books endpoint to prevent duplicate ISBNs and return a 409 Conflict error if a book with the same ISBN already exists.

=== API DOC USED ===
api_docs/3.json

=== EXTRACTED CODE USED ===
outputs/agentic_outputs/expand_code/3.md

=== TOKEN USAGE ===
{
  "langLibs": 13563,
  "apiDocs": 458,
  "balMdContent": 1428,
  "extractedCode": 292,
  "userQuery": 39,
  "systemPrompt": 16724,
  "generatedCode": 588,
  "totalInput": 17069,
  "toolCalls": 14
}

=== GENERATED CODE RESPONSE ===
Now I can see the current implementation of the PUT endpoint for updating books. I need to modify it to check for duplicate ISBNs before updating the book. Based on the project structure, I should also add the `http:Conflict` return type to the endpoint.

Here are the modifications needed:

<code filename="main.bal">
```ballerina
    resource function put books/[string bookId](@http:Payload BookRequest bookRequest) returns Book|http:NotFound|http:BadRequest|http:Conflict|http:InternalServerError {
        totalRequests += 1;

        if !bookStore.hasKey(k = bookId) {
            return http:NOT_FOUND;
        }

        // Check if another book with the same ISBN already exists
        foreach Book existingBook in bookStore {
            if existingBook.isbn == bookRequest.isbn && existingBook.id != bookId {
                return <http:Conflict> {
                    body: {
                        message: string `A book with ISBN ${bookRequest.isbn} already exists`
                    }
                };
            }
        }

        Book updatedBook = {
            id: bookId,
            title: bookRequest.title,
            author: bookRequest.author,
            isbn: bookRequest.isbn,
            price: bookRequest.price,
            quantity: bookRequest.quantity
        };

        bookStore[bookId] = updatedBook;
        return updatedBook;
    }
```
</code>

The key changes made to the update books endpoint:

1. **Added `http:Conflict` to the return type** - This allows the endpoint to return a 409 Conflict status code when a duplicate ISBN is found.

2. **Added ISBN duplication check** - Before updating the book, the code now iterates through all existing books in the store to check if any other book (excluding the current book being updated) has the same ISBN.

3. **Return 409 Conflict error** - If a duplicate ISBN is found, the endpoint returns an `http:Conflict` response with a descriptive error message indicating which ISBN already exists.

4. **Allow same book to keep its ISBN** - The check includes `existingBook.id != bookId` to ensure that a book can be updated with its own existing ISBN without triggering a conflict.

This modification ensures data integrity by preventing duplicate ISBNs in the bookstore while providing clear feedback to clients when conflicts occur. The 409 Conflict status code is the appropriate HTTP response for this type of resource conflict scenario.

