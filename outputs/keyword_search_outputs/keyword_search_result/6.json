[
  {
    "id": "cb314be4490edd84",
    "content": "service /bookstore on new http:Listener(servicePort) {",
    "score": 6.2862722754417355
  },
  {
    "id": "bfef2311d087c6bd",
    "content": "service /admin on new http:Listener(servicePort) {",
    "score": 6.2862722754417355
  },
  {
    "id": "9bb53b6dfe6fd8f6",
    "content": "resource function post books(@http:Payload BookRequest bookRequest) returns http:Created|http:BadRequest|http:InternalServerError {\n        totalRequests += 1;\n\n        Book|error validatedBook = validateAndFormatBook(bookRequest);\n        if validatedBook is error {\n            return http:BAD_REQUEST;\n        }\n\n        bookStore[validatedBook.id] = validatedBook;\n        return http:CREATED;\n    }",
    "score": 3.1641255870544374
  },
  {
    "id": "d5a7e3df8b825d89",
    "content": "resource function post categories(@http:Payload BookCategory category) returns http:Created|http:BadRequest {\n        totalRequests += 1;\n\n        if category.categoryName.trim().length() == 0 {\n            return http:BAD_REQUEST;\n        }\n\n        bookCategories[category.categoryId] = category;\n        return http:CREATED;\n    }",
    "score": 3.107131921489853
  },
  {
    "id": "7bea3c31c37d9129",
    "content": "resource function post books/search(@http:Payload BookSearchCriteria searchCriteria) returns Book[]|http:InternalServerError {\n        totalRequests += 1;\n\n        Book[] allBooks = bookStore.toArray();\n        Book[] filteredBooks = [];\n\n        foreach Book book in allBooks {\n            boolean matches = true;\n\n            string? titleCriteria = searchCriteria.title;\n            if titleCriteria is string {\n                if !book.title.toLowerAscii().includes(titleCriteria.toLowerAscii()) {\n                    matches = false;\n                }\n            }\n\n            string? authorCriteria = searchCriteria.author;\n            if authorCriteria is string && matches {\n                if !book.author.toLowerAscii().includes(authorCriteria.toLowerAscii()) {\n                    matches = false;\n                }\n            }\n\n            string? isbnCriteria = searchCriteria.isbn;\n            if isbnCriteria is string && matches {\n                if !book.isbn.includes(isbnCriteria) {\n                    matches = false;\n                }\n            }\n\n            decimal? minPriceCriteria = searchCriteria.minPrice;\n            if minPriceCriteria is decimal && matches {\n                if book.price < minPriceCriteria {\n                    matches = false;\n                }\n            }\n\n            decimal? maxPriceCriteria = searchCriteria.maxPrice;\n            if maxPriceCriteria is decimal && matches {\n                if book.price > maxPriceCriteria {\n                    matches = false;\n                }\n            }\n\n            if matches {\n                filteredBooks.push(book);\n            }\n        }\n\n        return filteredBooks;\n    }",
    "score": 0.849432980786974
  }
]